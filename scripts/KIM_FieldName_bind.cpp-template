#include <pybind11/operators.h>
#include <pybind11/pybind11.h>

#include <string>

#include "KIM_FieldName.hpp"

namespace py = pybind11;
using namespace KIM;

PYBIND11_MODULE(field_name, module)
{
  module.doc() = "Python binding to KIM_FieldName.hpp";

  // classes

  py::class_<FieldName> cl(module, "FieldName");

  cl.def(py::init<>())
      .def(py::init<int const>())
      .def(py::init<std::string const>())
      .def("known", &FieldName::Known)
      .def(py::self == py::self)
      .def(py::self != py::self)
      .def("__repr__", &FieldName::ToString);

  // functions

  module.def("get_field_name", [](int const index) {
    FieldName fieldName;

    int error = FIELD_NAME::GetFieldName(index, &fieldName);
    if (error == 1)
    {
      throw std::runtime_error("index < 0 or index >= numberOfFieldNames!");
    }

    return fieldName;
    }, R"pbdoc(
       Get the identity of each defined standard FieldName.

       Returns:
           FieldName: fieldName
       )pbdoc",
       py::arg("index"));

  module.def("get_number_of_field_names", []() {
    int numberOfFieldNames;

    FIELD_NAME::GetNumberOfFieldNames(&numberOfFieldNames);

    return numberOfFieldNames;
    }, R"pbdoc(
       Get the number of standard FieldName.

       Returns:
           int: numberOfFieldNames
       )pbdoc"
    );

  // attributes

  rpls_attributes
}
